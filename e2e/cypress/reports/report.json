{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2020-04-05T15:03:10.509Z",
    "end": "2020-04-05T15:03:24.072Z",
    "duration": 13563,
    "testsRegistered": 6,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0fe4c09-6d42-4005-9a4f-a02d6d88ef28",
      "title": "",
      "fullFile": "cypress/integration/test-flow.spec.js",
      "file": "cypress/integration/test-flow.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
          "title": "Modus Create - Cypress excersise",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add button is disabled when no value has been entered",
              "fullTitle": "Modus Create - Cypress excersise Add button is disabled when no value has been entered",
              "timedOut": null,
              "duration": 6842,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.log('This fail will test when it should not. It was a requirement in the exam to have one.');\ncy.get('div:nth-child(4) > button').contains('Add').should('not.be.disabled');",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '<button.submit._1QF5S._1oggc>' not to be 'disabled'",
                "estack": "AssertionError: Timed out retrying: expected '<button.submit._1QF5S._1oggc>' not to be 'disabled'\n    at applyChainer (https://budget.modus.app/__cypress/runner/cypress_runner.js:131705:30)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:131748:16\n    at arrayReduce (https://budget.modus.app/__cypress/runner/cypress_runner.js:18403:21)\n    at Function.reduce (https://budget.modus.app/__cypress/runner/cypress_runner.js:27401:14)\n    at applyChainers (https://budget.modus.app/__cypress/runner/cypress_runner.js:131738:18)\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Function.Promise.attempt.Promise.try (https://budget.modus.app/__cypress/runner/cypress_runner.js:6333:29)\n    at Context.shouldFn (https://budget.modus.app/__cypress/runner/cypress_runner.js:131752:23)\n    at Context.should (https://budget.modus.app/__cypress/runner/cypress_runner.js:131767:23)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:127819:39\n    at assertions (https://budget.modus.app/__cypress/runner/cypress_runner.js:128079:14)\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Object.gotValue (https://budget.modus.app/__cypress/runner/cypress_runner.js:8203:18)\n    at Object.gotAccum (https://budget.modus.app/__cypress/runner/cypress_runner.js:8190:25)\n    at Object.tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)",
                "diff": null
              },
              "uuid": "b8abf82a-878a-4919-b6e5-cafc0fd78989",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected category, description and value are added to the table",
              "fullTitle": "Modus Create - Cypress excersise Selected category, description and value are added to the table",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newValue = 124;\ncy.addEntry('Income', 'Cypress exercise', newValue).get('tbody tr:last-child td:nth-child(1)').contains('Income').get('tbody tr:last-child td:nth-child(2)').contains('Cypress exercise').get('tbody tr:last-child td:nth-child(3)').contains(newValue);",
              "err": {},
              "uuid": "728c665e-12f3-4be4-8176-82db00bd85fc",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Incomes are updated in Total Inflow field",
              "fullTitle": "Modus Create - Cypress excersise Incomes are updated in Total Inflow field",
              "timedOut": null,
              "duration": 1036,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber(); // Add an income\ncy.addEntry('Income', 'Cypress will provide incomes', newValue);\nvar newValue = 234; // Get the inital total + newIncome\nvar nextIncome = currentIncome + newValue; // New status of Incomes should equal nextIncome\nexpect(nextIncome).to.equal(currentIncome + newValue);",
              "err": {
                "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at cypressErr (https://budget.modus.app/__cypress/runner/cypress_runner.js:146180:16)\n    at cypressErrByPath (https://budget.modus.app/__cypress/runner/cypress_runner.js:146189:10)\n    at Object.throwErrByPath (https://budget.modus.app/__cypress/runner/cypress_runner.js:146152:11)\n    at Context.type (https://budget.modus.app/__cypress/runner/cypress_runner.js:130761:17)\n    at Context.<anonymous> (https://budget.modus.app/__cypress/runner/cypress_runner.js:144515:21)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:143990:33\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7051:18)\n    at Promise._settlePromiseCtx (https://budget.modus.app/__cypress/runner/cypress_runner.js:7088:10)\n    at _drainQueueStep (https://budget.modus.app/__cypress/runner/cypress_runner.js:3770:12)\n    at _drainQueue (https://budget.modus.app/__cypress/runner/cypress_runner.js:3759:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://budget.modus.app/__cypress/runner/cypress_runner.js:3775:5)\n    at Async.drainQueues (https://budget.modus.app/__cypress/runner/cypress_runner.js:3645:14)",
                "diff": null
              },
              "uuid": "c900628d-e833-4acb-9cb3-b98c5a0ff5e0",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outcomes are updated in Total Outflow field",
              "fullTitle": "Modus Create - Cypress excersise Outcomes are updated in Total Outflow field",
              "timedOut": null,
              "duration": 974,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Initial status of Outcomes\nvar currentOutcome = functions.outcomeNumber(); // Add an Outcome\ncy.addEntry('Groceries', 'Add Groceries expenses', newValue);\nvar newValue = 345; // Get the inital total + newOutcome\nvar nextOutcome = currentOutcome + newValue; // New status of Incomes should equal nextIncome\nexpect(nextOutcome).to.equal(currentOutcome + newValue);",
              "err": {
                "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at cypressErr (https://budget.modus.app/__cypress/runner/cypress_runner.js:146180:16)\n    at cypressErrByPath (https://budget.modus.app/__cypress/runner/cypress_runner.js:146189:10)\n    at Object.throwErrByPath (https://budget.modus.app/__cypress/runner/cypress_runner.js:146152:11)\n    at Context.type (https://budget.modus.app/__cypress/runner/cypress_runner.js:130761:17)\n    at Context.<anonymous> (https://budget.modus.app/__cypress/runner/cypress_runner.js:144515:21)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:143990:33\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7051:18)\n    at Promise._settlePromiseCtx (https://budget.modus.app/__cypress/runner/cypress_runner.js:7088:10)\n    at _drainQueueStep (https://budget.modus.app/__cypress/runner/cypress_runner.js:3770:12)\n    at _drainQueue (https://budget.modus.app/__cypress/runner/cypress_runner.js:3759:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://budget.modus.app/__cypress/runner/cypress_runner.js:3775:5)\n    at Async.drainQueues (https://budget.modus.app/__cypress/runner/cypress_runner.js:3645:14)",
                "diff": null
              },
              "uuid": "b685c09a-464c-4b4f-aa86-b11dc3123d0a",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Income = Total amount is updated in Working balance field",
              "fullTitle": "Modus Create - Cypress excersise Added an Income = Total amount is updated in Working balance field",
              "timedOut": null,
              "duration": 1043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an income\ncy.addEntry('Income', 'Income to test Working balance!', 300); // Get the current total amount after adding \nvar total = functions.totalNumber(); // New Working balance should match incomes-outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "a4e31923-8ca0-4843-b4ea-bdbaa0aa701a",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Outcome = Total amount is updated in Working balance field",
              "fullTitle": "Modus Create - Cypress excersise Added an Outcome = Total amount is updated in Working balance field",
              "timedOut": null,
              "duration": 1068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an outcome\ncy.addEntry('Home', 'Outcome to test Working balance!', 500); // Get the current total amount after adding and outcome\nvar total = functions.totalNumber(); // New Working balance should match incomes-outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "75e1d874-3044-4c25-b319-4e31b4588495",
              "parentUUID": "af2253e4-83bf-4199-ba76-34c3d2e4748a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "728c665e-12f3-4be4-8176-82db00bd85fc",
            "a4e31923-8ca0-4843-b4ea-bdbaa0aa701a",
            "75e1d874-3044-4c25-b319-4e31b4588495"
          ],
          "failures": [
            "b8abf82a-878a-4919-b6e5-cafc0fd78989",
            "c900628d-e833-4acb-9cb3-b98c5a0ff5e0",
            "b685c09a-464c-4b4f-aa86-b11dc3123d0a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": {
        "charts": false,
        "html": true,
        "json": true,
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": true
      },
      "version": "4.1.0"
    }
  }
}