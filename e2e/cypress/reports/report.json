{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 4,
    "pending": 0,
    "failures": 3,
    "start": "2020-04-05T21:34:53.271Z",
    "end": "2020-04-05T21:35:05.586Z",
    "duration": 12315,
    "testsRegistered": 7,
    "passPercent": 57.14285714285714,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2bc400c3-ed6a-4633-a9d5-25ce3cfeedd6",
      "title": "",
      "fullFile": "cypress/integration/test-flow.spec.js",
      "file": "cypress/integration/test-flow.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
          "title": "Modus Create - Cypress exercise",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add button is disabled when no value has been entered",
              "fullTitle": "Modus Create - Cypress exercise Add button is disabled when no value has been entered",
              "timedOut": null,
              "duration": 6600,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.log('This test will fail when it should not. It was a requirement in the exam to have one.');\ncy.get(selectors.addButton).contains('Add').should('not.be.disabled');",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '<button.submit._1QF5S._1oggc>' not to be 'disabled'",
                "estack": "AssertionError: Timed out retrying: expected '<button.submit._1QF5S._1oggc>' not to be 'disabled'\n    at applyChainer (https://budget.modus.app/__cypress/runner/cypress_runner.js:131705:30)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:131748:16\n    at arrayReduce (https://budget.modus.app/__cypress/runner/cypress_runner.js:18403:21)\n    at Function.reduce (https://budget.modus.app/__cypress/runner/cypress_runner.js:27401:14)\n    at applyChainers (https://budget.modus.app/__cypress/runner/cypress_runner.js:131738:18)\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Function.Promise.attempt.Promise.try (https://budget.modus.app/__cypress/runner/cypress_runner.js:6333:29)\n    at Context.shouldFn (https://budget.modus.app/__cypress/runner/cypress_runner.js:131752:23)\n    at Context.should (https://budget.modus.app/__cypress/runner/cypress_runner.js:131767:23)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:127819:39\n    at assertions (https://budget.modus.app/__cypress/runner/cypress_runner.js:128079:14)\n    at tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Object.gotValue (https://budget.modus.app/__cypress/runner/cypress_runner.js:8203:18)\n    at Object.gotAccum (https://budget.modus.app/__cypress/runner/cypress_runner.js:8190:25)\n    at Object.tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)",
                "diff": null
              },
              "uuid": "32c5f4c2-3af0-4c84-80cf-3d7638154bf6",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected category, description and value are added to the table",
              "fullTitle": "Modus Create - Cypress exercise Selected category, description and value are added to the table",
              "timedOut": null,
              "duration": 792,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newValue = 1;\ncy.addEntry('Income', 'Cypress exercise', newValue).click().get(selectors.category).contains('Income').get(selectors.description).contains('Cypress exercise').get(selectors.value).contains(newValue);",
              "err": {},
              "uuid": "c660b3a4-05e1-47ca-b8fd-2a94c339159d",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add button is still disabled when user adds a string in the value field",
              "fullTitle": "Modus Create - Cypress exercise Add button is still disabled when user adds a string in the value field",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newValue = 'test';\ncy.addEntry('Income', 'I will try to add a string', newValue).get(selectors.addButton).contains('Add').should('be.disabled');",
              "err": {},
              "uuid": "6adcc026-d528-451d-866d-417707317dbf",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Incomes are updated in Total Inflow field",
              "fullTitle": "Modus Create - Cypress exercise Incomes are updated in Total Inflow field",
              "timedOut": null,
              "duration": 314,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber(); // Add an income\nvar newValue = 1;\ncy.addEntry('Income', ' ', newValue).click(); // Get the inital total + newIncome\nvar nextIncome = functions.incomeNumber(); // New status of Incomes should equal nextIncome\nexpect(nextIncome).to.equal(currentIncome + newValue);",
              "err": {
                "message": "AssertionError: expected 6803 to equal 6804",
                "estack": "AssertionError: expected 6803 to equal 6804\n    at Context.runnable.fn (https://budget.modus.app/__cypress/runner/cypress_runner.js:144790:24)\n    at callFn (https://budget.modus.app/__cypress/runner/cypress_runner.js:88160:21)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:148766:28\n    at PassThroughHandlerContext.finallyHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:5613:23)\n    at PassThroughHandlerContext.tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7051:18)\n    at Promise._settlePromise0 (https://budget.modus.app/__cypress/runner/cypress_runner.js:7096:10)\n    at Promise._settlePromises (https://budget.modus.app/__cypress/runner/cypress_runner.js:7176:18)\n    at Promise._fulfill (https://budget.modus.app/__cypress/runner/cypress_runner.js:7120:18)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7064:21)\n    at Promise._settlePromise0 (https://budget.modus.app/__cypress/runner/cypress_runner.js:7096:10)\n    at Promise._settlePromises (https://budget.modus.app/__cypress/runner/cypress_runner.js:7176:18)\n    at Promise._fulfill (https://budget.modus.app/__cypress/runner/cypress_runner.js:7120:18)\n    at Promise._resolveCallback (https://budget.modus.app/__cypress/runner/cypress_runner.js:6914:57)",
                "diff": "- 6803\n+ 6804\n"
              },
              "uuid": "590aae42-f677-4835-aece-6762d90b7c80",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outcomes are updated in Total Outflow field",
              "fullTitle": "Modus Create - Cypress exercise Outcomes are updated in Total Outflow field",
              "timedOut": null,
              "duration": 322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Initial status of Outcomes\nvar currentOutcome = functions.outcomeNumber(); // Add an Outcome\nvar newValue = 1;\ncy.addEntry('Groceries', 'Add Groceries expenses', newValue).click(); // Get the inital total + newOutcome\nvar nextOutcome = functions.outcomeNumber(); // New status of Outcomes should equal nextOutcome\nexpect(nextOutcome).to.equal(currentOutcome + newValue);",
              "err": {
                "message": "AssertionError: expected 4588.07 to equal 4589.07",
                "estack": "AssertionError: expected 4588.07 to equal 4589.07\n    at Context.runnable.fn (https://budget.modus.app/__cypress/runner/cypress_runner.js:144790:24)\n    at callFn (https://budget.modus.app/__cypress/runner/cypress_runner.js:88160:21)\n    at https://budget.modus.app/__cypress/runner/cypress_runner.js:148766:28\n    at PassThroughHandlerContext.finallyHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:5613:23)\n    at PassThroughHandlerContext.tryCatcher (https://budget.modus.app/__cypress/runner/cypress_runner.js:9059:23)\n    at Promise._settlePromiseFromHandler (https://budget.modus.app/__cypress/runner/cypress_runner.js:6994:31)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7051:18)\n    at Promise._settlePromise0 (https://budget.modus.app/__cypress/runner/cypress_runner.js:7096:10)\n    at Promise._settlePromises (https://budget.modus.app/__cypress/runner/cypress_runner.js:7176:18)\n    at Promise._fulfill (https://budget.modus.app/__cypress/runner/cypress_runner.js:7120:18)\n    at Promise._settlePromise (https://budget.modus.app/__cypress/runner/cypress_runner.js:7064:21)\n    at Promise._settlePromise0 (https://budget.modus.app/__cypress/runner/cypress_runner.js:7096:10)\n    at Promise._settlePromises (https://budget.modus.app/__cypress/runner/cypress_runner.js:7176:18)\n    at Promise._fulfill (https://budget.modus.app/__cypress/runner/cypress_runner.js:7120:18)\n    at Promise._resolveCallback (https://budget.modus.app/__cypress/runner/cypress_runner.js:6914:57)",
                "diff": "- 4588.07\n+ 4589.07\n"
              },
              "uuid": "580037d6-022a-48cf-ba3d-6272e9d1deb4",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Income = Total amount is updated in Working balance field",
              "fullTitle": "Modus Create - Cypress exercise Added an Income = Total amount is updated in Working balance field",
              "timedOut": null,
              "duration": 922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an income\nvar newValue = 1;\ncy.addEntry('Income', 'Income to test Working balance!', newValue).click(); // Get the current total amount after adding an income\nvar total = functions.totalNumber(); // New Working balance should match incomes less outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "4d9c3cd5-e428-4f9a-af5a-cb239e6b0f8e",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Outcome = Total amount is updated in Working balance field",
              "fullTitle": "Modus Create - Cypress exercise Added an Outcome = Total amount is updated in Working balance field",
              "timedOut": null,
              "duration": 948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an outcome\ncy.addEntry('Home', 'Outcome to test Working balance!', 500).click(); // Get the current total amount after adding an outcome\nvar total = functions.totalNumber(); // New Working balance should match incomes less outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "0dc7a996-0be3-42b8-860a-2b4034c8b350",
              "parentUUID": "d692386c-7cd9-4858-9c79-31e4e6d031ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c660b3a4-05e1-47ca-b8fd-2a94c339159d",
            "6adcc026-d528-451d-866d-417707317dbf",
            "4d9c3cd5-e428-4f9a-af5a-cb239e6b0f8e",
            "0dc7a996-0be3-42b8-860a-2b4034c8b350"
          ],
          "failures": [
            "32c5f4c2-3af0-4c84-80cf-3d7638154bf6",
            "590aae42-f677-4835-aece-6762d90b7c80",
            "580037d6-022a-48cf-ba3d-6272e9d1deb4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": {
        "charts": false,
        "html": true,
        "json": true,
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": true
      },
      "version": "4.1.0"
    }
  }
}