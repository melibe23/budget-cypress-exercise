{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-05T04:33:25.367Z",
    "end": "2020-04-05T04:33:33.487Z",
    "duration": 8120,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "088a79b2-3db5-43f7-8157-d34c7b51475c",
      "title": "",
      "fullFile": "cypress/integration/test-flow.spec.js",
      "file": "cypress/integration/test-flow.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
          "title": "Modus Create - Cypress excersise",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add button is disabled when no value has been entered",
              "fullTitle": "Modus Create - Cypress excersise Add button is disabled when no value has been entered",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('This fail will test when it should not. It was a requirement in the exam to have one.');\ncy.get('div:nth-child(4) > button').should('not.be.disabled');",
              "err": {},
              "uuid": "b730aa74-c179-4da1-b233-36a37b9c8249",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Selected category, description and value are added to the table",
              "fullTitle": "Modus Create - Cypress excersise Selected category, description and value are added to the table",
              "timedOut": null,
              "duration": 1914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.addEntry('Income', 'Cypress exercise', newValue).get('tbody tr:last-child td:nth-child(1)').contains('Income').get('tbody tr:last-child td:nth-child(2)').contains('Cypress exercise').get('tbody tr:last-child td:nth-child(3)').contains(newValue);",
              "err": {},
              "uuid": "8c068dae-b628-439e-86ba-74a759b65889",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Incomes are reflected in Total Inflow field",
              "fullTitle": "Modus Create - Cypress excersise Incomes are reflected in Total Inflow field",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber(); // Add an income\ncy.addEntry('Income', 'Cypress will provide incomes', newValue); // Get the inital total + newIncome\nvar nextIncome = currentIncome + newValue; // New status of Incomes should equal nextIncome\nexpect(nextIncome).to.equal(currentIncome + newValue);",
              "err": {},
              "uuid": "40de68f7-3c2b-45cf-b2f9-c17786169f90",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outcomes are reflected in Total Outflow field",
              "fullTitle": "Modus Create - Cypress excersise Outcomes are reflected in Total Outflow field",
              "timedOut": null,
              "duration": 938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Outcomes\nvar currentOutcome = functions.outcomeNumber(); // Add an Outcome\ncy.addEntry('Groceries', 'Add Groceries expenses', newValue); // Get the inital total + newOutcome\nvar nextOutcome = currentOutcome + newValue; // New status of Incomes should equal nextIncome\nexpect(nextOutcome).to.equal(currentOutcome + newValue);",
              "err": {},
              "uuid": "c5ddef18-2e3c-4cc9-ae60-0ef303657a0e",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Income = Total amount is reflected in Working balance field",
              "fullTitle": "Modus Create - Cypress excersise Added an Income = Total amount is reflected in Working balance field",
              "timedOut": null,
              "duration": 1030,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an income\ncy.addEntry('Income', 'Income to test Working balance!', 300); // Get the current total amount after adding \nvar total = functions.totalNumber(); // New Working balance should match incomes-outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "7699f96d-5b44-45c7-96ca-9f62f98a8007",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Added an Outcome = Total amount is reflected in Working balance field",
              "fullTitle": "Modus Create - Cypress excersise Added an Outcome = Total amount is reflected in Working balance field",
              "timedOut": null,
              "duration": 1017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Initial status of Incomes & Outcomes\nvar currentIncome = functions.incomeNumber();\nvar currentOutcome = functions.outcomeNumber(); // Add an outcome\ncy.addEntry('Home', 'Outcome to test Working balance!', 500); // Get the current total amount after adding and outcome\nvar total = functions.totalNumber(); // New Working balance should match incomes-outcomes\nvar balance = (currentIncome - currentOutcome).toFixed(2);\nexpect(total).to.equal(balance);",
              "err": {},
              "uuid": "7aed60d5-ad5e-4132-80f4-0e2d2d99735e",
              "parentUUID": "9d83faab-13b2-4030-8c1d-d0eda7a4f99c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b730aa74-c179-4da1-b233-36a37b9c8249",
            "8c068dae-b628-439e-86ba-74a759b65889",
            "40de68f7-3c2b-45cf-b2f9-c17786169f90",
            "c5ddef18-2e3c-4cc9-ae60-0ef303657a0e",
            "7699f96d-5b44-45c7-96ca-9f62f98a8007",
            "7aed60d5-ad5e-4132-80f4-0e2d2d99735e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}